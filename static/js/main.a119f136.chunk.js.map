{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","utils/format.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","App.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","getTransactions","a","axios","get","res","data","response","deleteTransaction","id","delete","addTransaction","config","headers","post","Provider","value","AddTransaction","useContext","useState","text","setText","amount","setAmount","ids","map","onSubmit","e","preventDefault","Math","max","Number","className","htmlFor","onChange","target","placeholder","numberWithCommas","x","toString","replace","Balance","total","reduce","accumulator","currentValue","sign","abs","toFixed","Header","IncomeExpenses","amounts","income","expense","Transaction","onClick","TransactionList","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a119f136.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n                return {\r\n                    ...state,\r\n                    transactions: [...state.transactions, action.payload]\r\n                }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n                default:\r\n            return state;\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer'\r\nimport axios from 'axios'\r\n\r\n//initial state\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    //actions\r\n    const getTransactions = async () => {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions')\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            })\r\n        }\r\n        catch(err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    const deleteTransaction = async (id) => {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`)\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            })\r\n        }\r\n        catch(err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    const addTransaction = async (transaction) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config)\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n        }\r\n        catch(err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value = {{ \r\n            transactions: state.transactions, \r\n            error: state.error,\r\n            loading: state.loading,\r\n            getTransactions,\r\n            deleteTransaction, \r\n            addTransaction }}>\r\n            {children}\r\n        </GlobalContext.Provider>)\r\n}","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = ({}) => {\r\n    const { transactions, addTransaction } = useContext(GlobalContext)\r\n    \r\n    const [text, setText] = useState(() => { return \"\" })\r\n    const [amount, setAmount] = useState(() => { return 0 })\r\n    \r\n    const ids = transactions.map(transaction => transaction.id)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newId = Math.max(...ids) + 1\r\n\r\n        const transaction = {\r\n            id: newId,\r\n            text: text,\r\n            amount: Number(amount)\r\n        }\r\n\r\n        setText(\"\")\r\n        setAmount(0)\r\n\r\n        addTransaction(transaction)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3>Add new transaction</h3>\r\n        <form id=\"form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n            </div>\r\n            <div className=\"form-control\">\r\n            <label htmlFor=\"amount\"\r\n                >Amount <br />\r\n                (negative - expense, positive - income)</label\r\n            >\r\n            <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n            </div>\r\n            <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","export const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/format'\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    const total = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0)\r\n    const sign = total < 0 ? '-' : '+'\r\n    \r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 className={total < 0 ? 'balance minus' : 'balance plus'}>{sign}${numberWithCommas(Math.abs(total).toFixed(2))}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/format'\r\n\r\nconst IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n\r\n    const income = amounts\r\n        .filter(amount => amount > 0)\r\n        .reduce((accumulator, currentValue) => accumulator + currentValue, 0)\r\n\r\n    const expense = amounts\r\n        .filter(amount => amount < 0)\r\n        .reduce((accumulator, currentValue) => accumulator + currentValue, 0)\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">+${numberWithCommas(income.toFixed(2))}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">-${numberWithCommas(Math.abs(expense).toFixed(2))}</p>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/format'\r\n\r\nconst Transaction = ({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext)\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+'\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span><button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionList = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext)\r\n\r\n    useEffect(() => {\r\n        getTransactions()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n        <h3>History</h3>\r\n        <ul className=\"list\">\r\n            {transactions.map(transaction => (\r\n                <Transaction key={transaction.id} transaction={transaction}/>\r\n            ))}\r\n        </ul> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","\nimport React, {useState} from 'react';\n\nimport './App.css';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}